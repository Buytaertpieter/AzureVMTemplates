{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PrivateIPAddress": {
            "type": "string",
            "metadata": {
                "description": "Private IP adress used for the chosen subnet"
            }
        },
        "environment": {
            "defaultValue": "MFC_MGT_servers",
            "allowedValues": [
                "MFC_MGT_servers",
                "MFC_MGT_DMZ"
            ],
            "type": "string"
        },
        "availabilityset": {
            "type": "string"
        },
        "vmname": {
            "type": "string",
            "metadata": {
                "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
            }
        },
        "srcVHD": {
            "type": "string",
            "metadata": {
                "description": "URI to the source VHD. This VHD will be attached to the VM."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_A2",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_D1_v2",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_DS1",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4"
            ],
            "type": "string",
            "metadata": {
                "description": "The size of the virtual machines"
            }
        },
        "vmAdminUsername": {
            "defaultValue": "fcs_admin",
            "allowedValues": [
                "fcs_admin"
            ],
            "type": "string",
            "metadata": {
                "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'admin','administrator"
            }
        },
        "vmAdminPassword": {
            "type": "Securestring",
            "metadata": {
                "description": "The password for the administrator account of the new VM and the domain"
            }
        },
        "storageAccountName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "the name of the storage account, naming convention:  stacc<customer/department><name of resource group the account belongs to> "
            }
        }
    },
    "variables": {
        "settings_MFC_MGT_servers": {
            "vnet": "VNET_MFC_MGT",
            "subnet": "VNET_MFC_SUBNET_Servers",
            "DNSServer1": "172.20.245.10",
            "DNSServer2": "172.20.69.10",
            "DNSServer3": "172.20.66.10"
        },

        "settings_MFC_MGT_DMZ": {
            "vnet": "VNET_MFC_MGT",
            "subnet": "VNET_MFC_SUBNET_DMZ",
            "DNSServer1": "172.20.240.10",
            "DNSServer2": "172.20.64.10",
            "DNSServer3": "172.20.62.10"
        },
        "selectedSettings": "[concat('settings_', parameters('environment'))]",
        "nicName": "[concat('VNIC_',parameters('vmname'), '_' ,variables(variables('selectedSettings')).subnet)]",
        "vnetID": "[resourceId('RG_MFC_NetworkMGTSystems', 'Microsoft.Network/virtualNetworks', variables(variables('selectedSettings')).vnet)]",
        "subnetId": "[concat(variables('vnetID'),'/subnets/', variables(variables('selectedSettings')).subnet)]",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "windowsOSVersion": "2012-R2-Datacenter",
        "apiVersion": "2015-06-15"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('PrivateIPAddress')]",
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "[variables(variables('selectedSettings')).DNSServer1]",
                        "[variables(variables('selectedSettings')).DNSServer2]",
                        "[variables(variables('selectedSettings')).DNSServer3]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('availabilityset')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('availabilityset'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat('VDSK_', parameters('vmname'), 'DISK0')]",
                        "osType": "Windows",
                        "caching": "ReadWrite",
                        "vhd": {
                            "uri": "[parameters('srcVHD')]"
                        },
                        "createOption": "Attach"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilityset'))]"
            ]
        }
    ]
}